[#ftl]
[#--template for the client-side complex/simple type interface.--]
// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "${generatedPrefix}${clazz.name}.h"
#import "${generatedPrefix}Object.h"
#import "${generatedPrefix}DateFormatterUtils.h"
[#list fieldClassImports as import]
#import "${import}.h"
[/#list]

@implementation ${generatedPrefix}${clazz.name}

-(id) initWithValues[#list clazz.fields as field][#if field_index = 0]${field.name?cap_first}[#else] ${field.name}[/#if]: ([#if field.type.collection]NSMutableArray/*${projectPrefix}${field.type.typeParameters[0].fullName}*/[#elseif field.type.enum]${generatedPrefix}${field.type.fullName}[#elseif field.any]NSMutableArray[#elseif field.type.primitive]${field.type.fullName}[#else]${projectPrefix}${field.type.fullName}[/#if] *) ${field.name}Param[/#list]
{
    self = [super init];
    if(self) {
    [#list clazz.fields as field]
        self.${field.name} = ${field.name}Param;
    [/#list]
    }
    return self;
}

-(id) initWithDictionnary:(NSDictionary*)dict
{
    self = [#if clazz.superClass??][super initWithDictionnary:dict][#else][super init][/#if];
    if(self) {
    [#list clazz.fields as field]
        [#if field.type.enum]
        self.${field.name} = [${generatedPrefix}${field.type.fullName} fromString:dict${"["}@"${field.initialName}"]];
        [#elseif field.type.collection || field.type.array]
        id ${field.name}_dict = dict${"["}@"${field.initialName}"];

        NSMutableArray * ${field.name}Array = [[NSMutableArray alloc] initWithCapacity:[(NSArray*)${field.name}_dict count]];

        if([(NSArray*)${field.name}_dict count] > 0) {
            [#assign typeParameter = field.type.typeParameters?first]

            [#if typeParameter.enum]
            for (NSString * dictValue in (NSArray*)${field.name}_dict) {
            ${generatedPrefix}${typeParameter.fullName} * d = [${generatedPrefix}${typeParameter.fullName} fromString:dictValue];
            [#elseif typeParameter.primitive]
            for (${typeParameter.fullName}* dictValue in (NSArray*)${field.name}_dict) {
            ${typeParameter.fullName} * d = dictValue;
            [#else]
            for (NSDictionary* dict in (NSArray*)${field.name}_dict) {
            ${projectPrefix}${typeParameter.fullName} * d = [[${projectPrefix}${typeParameter.fullName} alloc]initWithDictionnary:dict];
            [/#if]

            [${field.name}Array addObject:d];
            }
            self.${field.name} = ${field.name}Array;
            }
        [#elseif field.type.primitive]
            [#if field.type.name == "DATE"]
                self.${field.name} = [${generatedPrefix}DateFormatterUtils convertToDate:dict${"["}@"${field.initialName}"]];
            [#else]
                self.${field.name} = dict${"["}@"${field.initialName}"];
            [/#if]
        [#else]
            NSDictionary * ${field.name}_dict = dict${"["}@"${field.initialName}"];
            if(${field.name}_dict != nil) {
                self.${field.name} = [[${projectPrefix}${field.type.fullName} alloc]initWithDictionnary:${field.name}_dict];
            }
        [/#if]
    [/#list]
    }
    return self;
}

-(NSDictionary*) asDictionary {
    NSMutableDictionary* dict = [#if clazz.superClass??][[NSMutableDictionary alloc] initWithDictionary:[super asDictionary]][#else][[NSMutableDictionary alloc] init][/#if];

[#list clazz.fields as field]

[#if field.type.enum]
    if(self.${field.name} != nil) {
        dict${"["}@"${field.initialName}"] = self.${field.name}.value;
    }
[#elseif field.type.primitive || field.any]
    if(self.${field.name} != nil) {
        [#if field.type.name == "DATE"]
            dict${"["}@"${field.initialName}"] = [${generatedPrefix}DateFormatterUtils formatWithDate:self.${field.name}] ;
        [#else]
            dict${"["}@"${field.initialName}"] = self.${field.name};
        [/#if]
    }
[#elseif field.type.array || field.type.collection]
    [#assign typeParameter = field.type.typeParameters?first]
    if(self.${field.name} != nil){
        NSMutableArray * array = [[NSMutableArray alloc] init];
        [#if typeParameter.enum]
            for( ${generatedPrefix}${typeParameter.fullName} *${field.name}Element in self.${field.name}) {
            [array addObject:${field.name}Element.value];
        [#elseif typeParameter.primitive]
            for( ${typeParameter.fullName} *${field.name}Element in self.${field.name}) {
            [array addObject:${field.name}Element];
        [#else]
            for( ${projectPrefix}${typeParameter.fullName} *${field.name}Element in self.${field.name}) {
            [array addObject:[${field.name}Element asDictionary]];
        [/#if]
        }
        dict${"["}@"${field.initialName}"] = array;
    }
[#else]
    if(self.${field.name} != nil) {
        dict${"["}@"${field.initialName}"] = [self.${field.name} asDictionary];
    }
[/#if]
[/#list]
    return dict;
}
@end
