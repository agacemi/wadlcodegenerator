[#ftl]
[#--template for the client-side complex/simple type interface.--]
// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "${generatedPrefix}Object.h"
[#list superClassImports as import]
#import "${import}.h"
[/#list]

[#if clazz.abstract]
// abstract class
[/#if]

[#list fieldClassImports as import]
#import "${import}.h"
[/#list]

/**
 ${clazz.docComment?default("(public class)")?replace("\n", "\n ")?replace("\t", "")}

*/
@interface ${generatedPrefix}${clazz.name} : [#if clazz.superClass??]${projectPrefix}${clazz.superClass.name}[#else]${generatedPrefix}Object[/#if]

[#function getPrimitiveTypeName type]
  [#assign index = type?last_index_of("_") ]
  [#return type?substring(index + 1)?lower_case]
[/#function]

[#list clazz.fields as field]
/**
 ${field.docComment?default("(public property)")?replace("\n", "\n ")?replace("\t", "")}
*/
[#if field.type.collection]
[#assign type = field.type.typeParameters?first]
@property (nonatomic, retain) NSMutableArray/*[#if !type.primitive]${projectPrefix}[/#if]${type.fullName}*/ *${field.name};
[#elseif field.type.enum]
@property (nonatomic, retain) ${generatedPrefix}${field.type.fullName} *${field.name};
[#elseif field.any]
@property (nonatomic, retain) NSMutableArray *${field.name};
[#else]
    [#if field.type.primitive]
@property (nonatomic, retain) ${field.type.fullName} *${field.name};
    [#else]
@property (nonatomic, retain) ${projectPrefix}${field.type.fullName} *${field.name};
    [/#if]
[/#if]

[/#list]

- (id) initWithValues[#list clazz.fields as field][#if field_index = 0]${field.name?cap_first}[#else] ${field.name}[/#if]: ([#if field.type.collection]NSMutableArray/*${projectPrefix}${field.type.typeParameters[0].fullName}*/[#elseif field.type.enum]${generatedPrefix}${field.type.fullName}[#elseif field.any]NSMutableArray[#elseif field.type.primitive]${field.type.fullName}[#else]${projectPrefix}${field.type.fullName}[/#if] *) ${field.name}Param[/#list];

@end
