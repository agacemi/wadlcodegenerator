[#ftl]
[#--template for the client-side complex/simple type interface.--]
// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "${generatedPrefix}Object.h"
[#list superClassImports as import]
#import "${import}.h"
[/#list]

[#if clazz.abstract]
// abstract class
[/#if]

[#list fieldClassImports as import]
#import "${import}.h"
[/#list]

/**
 ${clazz.docComment?default("(public class)")?replace("\n", "\n ")?replace("\t", "")}

*/
@interface ${generatedPrefix}${clazz.name} : [#if clazz.superClass??]${projectPrefix}${clazz.superClass.name}[#else]${generatedPrefix}Object[/#if]

[#list clazz.fields as field]
/**
 ${field.docComment?default("(public property)")?replace("\n", "\n ")?replace("\t", "")}
*/
    [#if field.type.collection]
        [#assign type = field.type.typeParameters?first]
        [#assign fieldType = "NSMutableArray/*"]
        [#if !type.primitive]
            [#assign fieldType = "${fieldType}${projectPrefix}"]
        [/#if]
        [#assign fieldType = "${fieldType}${type.fullName}*/"]
    [#elseif field.type.enum]
            [#assign fieldType = "${generatedPrefix}${field.type.fullName}"]
    [#elseif field.propertyKindAny]
            [#assign fieldType = "NSMutableArray"]
    [#else]
        [#if field.type.primitive]
                [#assign fieldType = "${field.type.fullName}"]
        [#else]
            [#assign fieldType = "${projectPrefix}${field.type.fullName}"]
        [/#if]
    [/#if]
@property (nonatomic, [#if field.fixedValue]readonly[#else]strong[/#if]) ${fieldType} *${field.name};

[/#list]
[#assign fieldIndex = 0]
[#assign values = ""]
[#list clazz.fields as field]
    [#if !field.value??]
        [#if fieldIndex == 0]
            [#assign values = "${values}${field.name?cap_first}"]
        [#else]
            [#assign values = "${values} ${field.name}"]
        [/#if]
        [#assign values = "${values}: ("]
        [#if field.type.collection]
            [#assign values = "${values}NSMutableArray/*${projectPrefix}${field.type.typeParameters[0].fullName}*/"]
        [#elseif field.type.enum]
            [#assign values = "${values}${generatedPrefix}${field.type.fullName}"]
        [#elseif field.propertyKindAny]
            [#assign values = "${values}NSMutableArray"]
        [#elseif field.type.primitive]
            [#assign values = "${values}${field.type.fullName}"]
        [#else]
            [#assign values = "${values}${projectPrefix}${field.type.fullName}"]
        [/#if]
        [#assign values = "${values}*) ${field.name}Param"]
        [#assign fieldIndex = fieldIndex + 1]
    [/#if]
[/#list]
- (id) initWithValues${values};

@end
